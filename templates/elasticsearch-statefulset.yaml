apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster
  namespace: {{ .Values.namespace }}
  labels:
    "app.kubernetes.io/part-of": efk-stack
spec:
  serviceName: elasticsearch
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 10m
          ports:
            - name: rest
              containerPort: 9200
              protocol: TCP
            - name: inter-node
              containerPort: 9300
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.elasticsearch.volume }}
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: cluster.name
              value: elasticsearch
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: "es-cluster-0.elasticsearch,es-cluster-1.elasticsearch,es-cluster-2.elasticsearch"
            - name: cluster.initial_master_nodes
              value: "es-cluster-0,es-cluster-1,es-cluster-2"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
            - name: xpack.security.enabled
              value: "false"
      volumes:
        - name: {{ .Values.elasticsearch.volume }}
          persistentVolumeClaim:
            claimName: {{ .Values.elasticsearch.volume }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.elasticsearch.volume }}
        labels:
          app: elasticsearch
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.elasticsearch.storageClass }}
        resources:
          requests:
            storage: {{ .Values.elasticsearch.storageRequest }}
